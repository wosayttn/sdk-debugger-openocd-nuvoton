proc numicro_write32 {addr value} {
	mww $addr $value
}

proc numicro_read32 {addr} {
	return [read_memory $addr 32 1]
}

proc ddrinit { } {
### DDR memory controller initialization

# DDR memory controller register Base Address: 0x404D0000

#Set TAHBCKEN,CM4CKEN,CA35CKEN,DDR6CKEN,GFXCKEN,VC8KCKEN,DCUCKEN,GMAC0CKEN,GMAC1CKEN,CAP0CKEN,CAP1CKEN
#outp32(CLK_BA + 0x04, (inp32(CLK_BA + 0x04) | 0x7F000037));
numicro_write32 0x40460204 [expr {[numicro_read32 0x40460204] | 0x7F000037}]
#outp32(CLK_BA + 0x0C, (inp32(CLK_BA + 0x0C) | 0x40000000));
numicro_write32 0x4046020C [expr {[numicro_read32 0x4046020C] | 0x40000000}]
# DDR control register clock gating disable */
#outp32(SYS_BA + 0x70, (inp32(SYS_BA + 0x70) | 0x00800000));
numicro_write32 0x40460070 [expr {[numicro_read32 0x40460070] | 0x00800000}]
# de-assert presetn of MCTL2 */
# outp32(SYS_BA + 0x20, (inp32(SYS_BA + 0x20) & 0xafffffff));
numicro_write32 0x40460020 [expr {[numicro_read32 0x40460020] & 0xafffffff}]
#while((inp32(SYS_BA + 0x20) & 0x50000000) != 0x00000000);
while { [expr {[numicro_read32 0x40460020] & 0x50000000}] != 0x00000000 } { }
#set MCTLCRST to 1
#outp32(SYS_BA + 0x20, (inp32(SYS_BA + 0x20) | 0x20000000));
numicro_write32 0x40460020 [expr {[numicro_read32 0x40460020] | 0x20000000}]

#PRINT " DDR Controller Initial Start "

# set MCTLCRST to 1
numicro_write32 0x40460020 [expr {[numicro_read32 0x40460020] | 0x20000000}]

# set DBG1
numicro_write32 0x404D0304 0x00000001
# set PWRCTL # selfref_en
numicro_write32 0x404D0030 0x00000001

# polling to 32'h0000_0000
# Operation Mode Status register
#&Var = MReadI32 0x404D0004
#&ret = GetBit(&Var, 0, 1)
#while (&ret != 0x00000000)
#{
#    &Var = MREAD("S32",A:0x404D0004)
#    &ret = GetBit(&Var, 0, 1)
#}

# set MSTR # Master register 0
numicro_write32 0x404D0000 0x01040000

# set MRCTRL0 # Mode register R/W control register
numicro_write32 0x404D0010 0x00001010
# set MRCTRL1 # Mode register R/W control register
numicro_write32 0x404D0014 0x00000000

# set PWRCTL # Low Power control register
numicro_write32 0x404D0030 0x00000000
# set PWRTMG # Low Power Timing register
numicro_write32 0x404D0034 0x00400010
# set HWLPCTL # Hardware Low Power control register
numicro_write32 0x404D0038 0x000a0003

# set RFSHCTL0 # Refresh control register 0
numicro_write32 0x404D0050 0x00210000
# set RFSHCTL1 # Refresh control register 1
numicro_write32 0x404D0054 0x003c003c
# set RFSHCTL3 # Refresh control register 3
numicro_write32 0x404D0060 0x00000000
# set RFSHCTL3 # Refresh Timing register
numicro_write32 0x404D0064 0x00100022

# set CRCPARCTL0 # CRC Parity control register 0
numicro_write32 0x404D00C0 0x00000000

# set INIT0 # SDRAM Initialization register 0
numicro_write32 0x404D00D0 0x40020035
# set INIT1 # SDRAM Initialization register 1
numicro_write32 0x404D00D4 0x00010002
# set INIT3 # SDRAM Initialization register 3
numicro_write32 0x404D00DC 0x0e730004
# set INIT4 # SDRAM Initialization register 4
numicro_write32 0x404D00E0 0x00000000
# set INIT5 # SDRAM Initialization register 5
numicro_write32 0x404D00E4 0x00010000

# set DIMMCTL # DIMM control register
numicro_write32 0x404D00F0 0x00000000
# set RANKCTL # Rank control register
numicro_write32 0x404D00F4 0x0000031f

# set DRAMTMG0 # SRDAM Timing register 0
numicro_write32 0x404D0100 0x090c110c
# set DRAMTMG1 # SRDAM Timing register 1
numicro_write32 0x404D0104 0x0003030e
# set DRAMTMG2 # SRDAM Timing register 2
numicro_write32 0x404D0108 0x00000407
# set DRAMTMG3 # SRDAM Timing register 3
numicro_write32 0x404D010C 0x00001004
# set DRAMTMG4 # SRDAM Timing register 4
numicro_write32 0x404D0110 0x03010304
# set DRAMTMG5 # SRDAM Timing register 5
numicro_write32 0x404D0114 0x01010202
# set DRAMTMG8 # SRDAM Timing register 8
numicro_write32 0x404D0120 0x00000502
# set DRAMTMG15 # SRDAM Timing register 15
numicro_write32 0x404D013C 0x80000032

# set ZQCTL0 # ZQ control register 0
numicro_write32 0x404D0180 0xc0000000
# set ZQCTL1 # ZQ control register 1
numicro_write32 0x404D0184 0x00074bf0

# set DFITMG0 # DFI timing register 0
numicro_write32 0x404D0190 0x04020101
# set DFITMG1 # DFI timing register 1
numicro_write32 0x404D0194 0x00060101
# set DFILPCFG0 # DFI Low power configuration register 0
# DFI_DDR_PHY_LP
#numicro_write32 0x404D0198 0x0700b131
# NOT DFI_DDR_PHY_LP
numicro_write32 0x404D0198 0x0700b030
# set DFIUPD0 # DFI update register 0
numicro_write32 0x404D01A0 0x00400005
# set DFIUPD1 # DFI update register 1
numicro_write32 0x404D01A4 0x00170066
# set DFIUPD2 # DFI update register 2
numicro_write32 0x404D01A8 0x80000000
# set DFIMISC # DFI miscellaneous control register
numicro_write32 0x404D01B0 0x00000011
# set DFIPHYMSTR # DFI PHY master
numicro_write32 0x404D01C4 0x00000000

# set ADDRMAP0 # Address map register 0
numicro_write32 0x404D0200 0x0000001f
# set ADDRMAP1 # Address map register 1
numicro_write32 0x404D0204 0x00080808
# set ADDRMAP2 # Address map register 2
numicro_write32 0x404D0208 0x00000000
# set ADDRMAP3 # Address map register 3
numicro_write32 0x404D020C 0x00000000
# set ADDRMAP4 # Address map register 4
numicro_write32 0x404D0210 0x00001f1f
# set ADDRMAP5 # Address map register 5
numicro_write32 0x404D0214 0x070f0707
# set ADDRMAP6 # Address map register 6
numicro_write32 0x404D0218 0x0f0f0f07
# set ADDRMAP9 # Address map register 9
numicro_write32 0x404D0224 0x07070707
# set ADDRMAP10 # Address map register 10
numicro_write32 0x404D0228 0x07070707
# set ADDRMAP11 # Address map register 11
numicro_write32 0x404D022C 0x00000007

# set ODTCFG # ODT configuration register
numicro_write32 0x404D0240 0x07010708
# set ODTMAP # ODT/Rank map register
numicro_write32 0x404D0244 0x00000101

# set SCHED # Scheduler control register
numicro_write32 0x404D0250 0x00f51f00
# set SCHED1 # Scheduler control register 1
numicro_write32 0x404D0254 0x00000000

# set PERFHPR1 # High priority read CAM register 1
numicro_write32 0x404D025C 0x0f000001
# set PERFLPR1 # Low priority read CAM register 1
numicro_write32 0x404D0264 0x0f00007f
# set PERFWR1 # Write CAM register 1
numicro_write32 0x404D026C 0x0f00007f

# set DBG0 # Debug register 0
numicro_write32 0x404D0300 0x00000000
# set DBG1 # Debug register 1
numicro_write32 0x404D0304 0x00000000
# set DBGCMD # Command debug register
numicro_write32 0x404D030C 0x00000000

# set SWCTL # Software register programming control enable
numicro_write32 0x404D0320 0x00000001
# set SWCTLSTATIC # Static registers write enable
numicro_write32 0x404D0328 0x00000000

# set POISONCFG # AXI poison configuration register. Common for all AXI ports
numicro_write32 0x404D036C 0x00110011
# set PCTRL_0 # Port 0 control register
numicro_write32 0x404D0490 0x00000001
# set PCTRL_1 # Port 1 control register
numicro_write32 0x404D0540 0x00000000
# set PCTRL_2 # Port 2 control register
numicro_write32 0x404D05f0 0x00000000
# set PCTRL_3 # Port 3 control register
numicro_write32 0x404D06a0 0x00000000
# set PCTRL_4 # Port 4 control register
numicro_write32 0x404D0750 0x00000000
# set PCTRL_5 # Port 5 control register
numicro_write32 0x404D0800 0x00000000
# set PCTRL_6 # Port 6 control register
numicro_write32 0x404D08b0 0x00000001
# set PCTRL_7 # Port 7 control register
numicro_write32 0x404D0960 0x00000001

# set PCCFG # Port common configuration register
numicro_write32 0x404D0400 0x00000000
# set PCFGR_0 # Port 0 configuration read register
numicro_write32 0x404D0404 0x0001500f
# set PCFGR_1 # Port 1 configuration read register
numicro_write32 0x404D04b4 0x0001500f
# set PCFGR_2 # Port 2 configuration read register
numicro_write32 0x404D0564 0x0001500f
# set PCFGR_3 # Port 3 configuration read register
numicro_write32 0x404D0614 0x0001500f
# set PCFGR_4 # Port 4 configuration read register
numicro_write32 0x404D06c4 0x0001500f
# set PCFGR_5 # Port 5 configuration read register
numicro_write32 0x404D0774 0x0001500f
# set PCFGR_6 # Port 6 configuration read register
numicro_write32 0x404D0824 0x0001500f
# set PCFGR_7 # Port 7 configuration read register
numicro_write32 0x404D08d4 0x0001500f
# set PCFGW_0 # Port 0 configuration write register
numicro_write32 0x404D0408 0x0000500f
# set PCFGW_1 # Port 1 configuration write register
numicro_write32 0x404D04b8 0x0000500f
# set PCFGW_2 # Port 2 configuration write register
numicro_write32 0x404D0568 0x0000500f
# set PCFGW_3 # Port 3 configuration write register
numicro_write32 0x404D0618 0x0000500f
# set PCFGW_4 # Port 4 configuration write register
numicro_write32 0x404D06c8 0x0000500f
# set PCFGW_5 # Port 5 configuration write register
numicro_write32 0x404D0778 0x0000500f
# set PCFGW_6 # Port 6 configuration write register
numicro_write32 0x404D0828 0x0000500f
# set PCFGW_7 # Port 7 configuration write register
numicro_write32 0x404D08d8 0x0000500f

# set SARBASE0 # SAR base address register 0
numicro_write32 0x404D0f04 0x00000008
# set SARSIZE0 # SAR size register 0
numicro_write32 0x404D0f08 0x00000000

#PRINT " DDR Controller Initial Finish "

# de-assert reset signals of DDR memory controller
#numicro_write32 0x40460020 (Data.Long(ENAHB:0x40460020) & 0x8fffffff)
#while( (Data.Long(ENAHB:0x40460020) & 0x20000000) != 0x00000000);
numicro_write32 0x40460020 [expr {[numicro_read32 0x40460020] & 0x8fffffff}]
while { [expr {[numicro_read32 0x40460020] & 0x20000000}] != 0x00000000 } { }
#PRINT " === release DDR controller core reset === "

# initialize ssmcc and ddr for A35 access
# Do nothing

### set DDR PHY

# DDR PHY PUB Base Address: 0x404C0000

#PRINT " DDR PHY Initial Start "

#set DSGCR, address = 16
numicro_write32 0x404C0040 0xf004649f
#set PGCR1, address = 3
numicro_write32 0x404C000C 0x0300c461
# set PGCR2,address = 35
numicro_write32 0x404C008C 0x00f0027f
# set PTR0, address = 7  #PHY timing register0
numicro_write32 0x404C001C 0x0c806403
# set PTR1, address = 8  #PHY timing register1
numicro_write32 0x404C0020 0x27100385
# set PTR2, address = 9  #PHY timing register2
numicro_write32 0x404C0024 0x00083def
# set PTR3, address = 10 #PHY timing register3
numicro_write32 0x404C0028 0x0d61a072
# set PTR4, address = 11 #PHY timing register4
numicro_write32 0x404C002C 0x0559a072

# set MR0, address = 21
numicro_write32 0x404C0054 0x00000e73
# set MR1, address = 22
numicro_write32 0x404C0058 0x00000004
# set MR2, address = 23
numicro_write32 0x404C005C 0x00000000
# set MR3, address = 24
#numicro_write32 0x404C0060 0x00000000

# set DTPR0, address = 18
numicro_write32 0x404C0048 0x71987755
# set DTPR1, address = 19
numicro_write32 0x404C004C 0x22822322
# set DTPR2, address = 20
numicro_write32 0x404C0050 0x0641a8c8

# set ZQ0CR1,addr=97
numicro_write32 0x404C0184 0x0000104b

# polling PGSR0 (addr=4) to 0x0000000f
#while((inp32(DDRPHY_BA + 0x010) & 0x0000000f) != 0x0000000f);
# A:Physical address, D:Data address
while { [expr {[numicro_read32 0x404C0010] & 0x0000000f}] != 0x0000000f } { }

# set DCR, address = 17
numicro_write32 0x404C0044 0x0000040a
# set DTCR, address = 26
numicro_write32 0x404C0068 0x91003587
# set PIR, address = 1
numicro_write32 0x404C0004 0x0000f501

#polling PGSR0 (addr=4) to 0xb0000f5f
while { [expr {[numicro_read32 0x404C0010]}] != 0xb0000f5f } { }

#PRINT " DDR PHY Initial Finish "

#polling MCTL2 STAT to 0x00000001
#while((inp32(UMCTL2_BA + 0x004) & 0x00000003) != 0x00000001);
while { [expr {[numicro_read32 0x404D0004] & 0x00000003}] != 0x00000001 } { }

#set SWCTL
#outp32(UMCTL2_BA + 0x320,0x00000000);
numicro_write32 0x404D0320 0x00000000

#set PWRCTL
#outp32(UMCTL2_BA + 0x030,0x0000000b);  //mod 20191213
numicro_write32 0x404D0030 0x0000000b

#set SWCTL
#outp32(UMCTL2_BA + 0x320,0x00000001);
numicro_write32 0x404D0320 0x00000001

#polling MCTL2 SWSTAT to 0x00000001
#while((inp32(UMCTL2_BA + 0x324) & 0x00000001) != 0x00000001);
while { [expr {[numicro_read32 0x404D0324] & 0x00000001}] != 0x00000001 } { }

#PRINT "=== DDR memory controller initialization Done ==="

#outp32((void *)UMCTL2_BA+0x490, 0x1);
numicro_write32 0x404D0490 0x00000001
#outp32((void *)UMCTL2_BA+0x8b0, 0x1);
numicro_write32 0x404D08B0 0x00000001
#outp32((void *)UMCTL2_BA+0x960, 0x1);
numicro_write32 0x404D0960 0x00000001

#outp32((void *)UMCTL2_BA+0x540, 0x1);
numicro_write32 0x404D0540 0x00000001
#outp32((void *)UMCTL2_BA+0x5f0, 0x1);
numicro_write32 0x404D05f0 0x00000001
#outp32((void *)UMCTL2_BA+0x6a0, 0x1);
numicro_write32 0x404D06a0 0x00000001
#outp32((void *)UMCTL2_BA+0x750, 0x1);
numicro_write32 0x404D0750 0x00000001
#outp32((void *)UMCTL2_BA+0x800, 0x1);
numicro_write32 0x404D0800 0x00000001

#outp32(SYS_BA + 0x70,(inp32(SYS_BA + 0x70) & ~0x00800000));        /* DDR control register clock gating enable */
numicro_write32 0x404D08B0 [expr {[numicro_read32 0x40460070] & 0xff7fffff}]

#outp32(CLK_BA + 0x04, 0x35);
numicro_write32 0x40460204 0x00000035

#PRINT "=== DDR memory controller initialization Done ==="

}

halt

## Unlock
#data.set 0x404601A0 %long 0x00000059
#data.set 0x404601A0 %long 0x00000016
#data.set 0x404601A0 %long 0x00000088
numicro_write32 0x404601A0 0x00000059
numicro_write32 0x404601A0 0x00000016
numicro_write32 0x404601A0 0x00000088

## do ddr init
ddrinit

#data.set 0x40460200 %long (Data.Long(ENAHB:0x40460200)|0x0000f)
numicro_write32 0x40460200 [expr {[numicro_read32 0x40460200] | 0x0000f}]

## Assign UART0 to TZNS
#data.set 0x404F001C %long (Data.Long(ENAHB:0x404F001C)|0x1)
numicro_write32 0x404F001C [expr {[numicro_read32 0x404F001C] | 0x1}]

##Set SRAM1 fro A35
#data.set 0x404F0040 %long 0x0000101F
numicro_write32 0x404F0040 0x0000101F

#data.set 0x40460218 %long (Data.Long(ENAHB:0x40460218)|0x4)
#data.set 0x40460204 %long (Data.Long(ENAHB:0x40460204)|0x7f000000)
numicro_write32 0x40460218 [expr {[numicro_read32 0x40460218] | 0x4}]
numicro_write32 0x40460204 [expr {[numicro_read32 0x40460204] | 0x7f000000}]

##Set SSMCC
#data.set 0x40460214 %long (Data.Long(ENAHB:0x40460214)|0x00004)
#data.set 0x404E1110 %long 0xC0000000
#data.set 0x404E1008 %long 0x00000007
#data.set 0x404E2110 %long 0xC0000000
#data.set 0x404E2008 %long 0x00000003
#data.set 0x404E3110 %long 0xC0000000
#data.set 0x404E3008 %long 0x00000007
#data.set 0x404E1104 %long 0x00010001
#data.set 0x404E2104 %long 0x00010001
#data.set 0x404E3104 %long 0x00030003
numicro_write32 0x40460214 [expr {[numicro_read32 0x40460214] | 0x00004}]
numicro_write32 0x404E1110 0xC0000000
numicro_write32 0x404E1008 0x00000007
numicro_write32 0x404E2110 0xC0000000
numicro_write32 0x404E2008 0x00000003
numicro_write32 0x404E3110 0xC0000000
numicro_write32 0x404E3008 0x00000007
numicro_write32 0x404E1104 0x00010001
numicro_write32 0x404E2104 0x00010001
numicro_write32 0x404E3104 0x00030003

##Set DDR Init
#data.set 0x404d0490 %long 0x00000001
#data.set 0x404d0540 %long 0x00000001
#data.set 0x404d05f0 %long 0x00000001
#data.set 0x404d06a0 %long 0x00000001
#data.set 0x404d0750 %long 0x00000001
#data.set 0x404d0800 %long 0x00000001
#data.set 0x404d08b0 %long 0x00000001
#data.set 0x404d0960 %long 0x00000001
numicro_write32 0x404d0490 0x00000001
numicro_write32 0x404d0540 0x00000001
numicro_write32 0x404d05f0 0x00000001
numicro_write32 0x404d06a0 0x00000001
numicro_write32 0x404d0750 0x00000001
numicro_write32 0x404d0800 0x00000001
numicro_write32 0x404d08b0 0x00000001
numicro_write32 0x404d0960 0x00000001

#data.set 0x40460204 %long (Data.Long(ENAHB:0x40460204)&0x80ffffff)
#data.set 0x40460218 %long (Data.Long(ENAHB:0x40460218)&0xfffffffb)
numicro_write32 0x40460204 [expr {[numicro_read32 0x40460204] & 0x80ffffff}]
numicro_write32 0x40460218 [expr {[numicro_read32 0x40460218] & 0xfffffffb}]

#data.set 0x40460204 %long (Data.Long(ENAHB:0x40460204)|0x80000)
#data.set 0x40200804 %long (Data.Long(ENAHB:0x40200804)|0x2)
#data.set 0x40460204 %long (Data.Long(ENAHB:0x40460204)&0xfff7ffff)
numicro_write32 0x40460204 [expr {[numicro_read32 0x40460204] | 0x80000}]
numicro_write32 0x40200804 [expr {[numicro_read32 0x40200804] | 0x2}]
numicro_write32 0x40460204 [expr {[numicro_read32 0x40460204] & 0xfff7ffff}]

## set usbd descriptor field to 0
#data.set 0x2803e3a8 %long 0x00000000
#data.set 0x2803e3b8 %long 0x00000000
numicro_write32 0x2803e3a8 0x00000000
numicro_write32 0x2803e3b8 0x00000000