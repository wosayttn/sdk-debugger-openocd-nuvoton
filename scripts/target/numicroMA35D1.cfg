# HLA does not support multi-cores nor custom CSW nor AP other than 0
if { [using_hla] } {
	echo "ERROR: HLA transport cannot work with this target."
	shutdown
}

source [find target/swj-dp.tcl]

if { [info exists CHIPNAME] } {
	set _CHIPNAME $CHIPNAME
} else {
	set _CHIPNAME ma35d1
}

if { [info exists CPUTAPID] } {
	set _CPUTAPID $CPUTAPID
} else {
	set _CPUTAPID 0x6ba02477
}

swj_newdap $_CHIPNAME tap -expected-id $_CPUTAPID -irlen 4

dap create $_CHIPNAME.dap -chain-position $_CHIPNAME.tap -ignore-syspwrupack

cti create $_CHIPNAME.cti.sys  -dap $_CHIPNAME.dap -ap-num 1 -ctibase 0xE0801000
cti create $_CHIPNAME.cti.cpu0 -dap $_CHIPNAME.dap -ap-num 1 -ctibase 0xE0C20000
cti create $_CHIPNAME.cti.cpu1 -dap $_CHIPNAME.dap -ap-num 1 -ctibase 0xE0D20000
cti create $_CHIPNAME.cti.cm4  -dap $_CHIPNAME.dap -ap-num 2 -ctibase 0xE0042000

# so defer-examine it until the reset framework get merged
# NOTE: keep ap-num and dbgbase to speed-up examine after reset
# NOTE: do not change the order of target create
target create $_CHIPNAME.axi mem_ap -dap $_CHIPNAME.dap -ap-num 0
target create $_CHIPNAME.cpu0 aarch64 -dap $_CHIPNAME.dap -ap-num 1 -coreid 0 -dbgbase 0xE0C10000 -cti $_CHIPNAME.cti.cpu0
target create $_CHIPNAME.cpu1 aarch64 -dap $_CHIPNAME.dap -ap-num 1 -coreid 1 -dbgbase 0xE0D10000 -cti $_CHIPNAME.cti.cpu1
target create $_CHIPNAME.cm4 cortex_m -dap $_CHIPNAME.dap -ap-num 2

targets $_CHIPNAME.cpu0

target smp $_CHIPNAME.cpu0 $_CHIPNAME.cpu1
$_CHIPNAME.cpu0 aarch64 maskisr on
$_CHIPNAME.cpu1 aarch64 maskisr on

adapter srst delay 200
reset_config srst_only
adapter speed 1000

proc dbgmcu_enable_debug {} {
	# # set debug enable bits in DBGMCU_CR to get ap2 and cm4 visible
	catch {
	$::_CHIPNAME.axi mww 0x404601A8 0x59
	$::_CHIPNAME.axi mww 0x404601A8 0x16
	$::_CHIPNAME.axi mww 0x404601A8 0x88
	$::_CHIPNAME.axi mww 0x40460020 0x0
	}
}

proc reset_m4 {} {
	soft_reset_halt
}

proc smp_cpu0 {} {
	$::_CHIPNAME.cpu0 aarch64 dbginit
}

proc smp_cpu1 {} {
	$::_CHIPNAME.cpu1 aarch64 dbginit
}

$_CHIPNAME.cpu0 configure -rtos hwthread
$_CHIPNAME.cpu1 configure -rtos hwthread
$_CHIPNAME.cpu0 configure -event reset-assert {smp_cpu0}
$_CHIPNAME.cpu1 configure -event reset-assert {smp_cpu1}
$_CHIPNAME.cm4  configure -event examine-start {dbgmcu_enable_debug}
$_CHIPNAME.cm4  configure -event reset-assert {reset_m4}
