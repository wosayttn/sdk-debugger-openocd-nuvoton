# SPDX-License-Identifier: GPL-2.0-or-later

# Adapt based on what transport is active.
if [catch {transport select}] {
  echo "Error: unable to select a session transport. Can't continue."
  shutdown
}

proc swj_newdap {chip tag args} {
 if [using_hla] {
     eval hla newtap $chip $tag $args
 } elseif [using_jtag] {
     eval jtag newtap $chip $tag $args
 } elseif [using_swd] {
     eval swd newdap $chip $tag $args
 }
}

# Set Chipname
if { [info exists CHIPNAME] } {
	set _CHIPNAME $CHIPNAME
} else {
	set _CHIPNAME KM1M4BFxxx
}

# SWD DP-ID Nuvoton NuMicro Cortex-M0 has SWD Transport only.
if { [info exists CPUDAPID] } {
	set _CPUDAPID $CPUDAPID
} else {
	set _CPUDAPID 0x2ba01477
}

# Work-area is a space in RAM used for flash programming
# By default use 2kB
if { [info exists WORKAREASIZE] } {
   set _WORKAREASIZE $WORKAREASIZE
} else {
   set _WORKAREASIZE 0x2000
}


# Debug Adapter Target Settings
swj_newdap $_CHIPNAME cpu -irlen 4 -expected-id $_CPUDAPID
dap create $_CHIPNAME.dap -chain-position $_CHIPNAME.cpu
set _TARGETNAME $_CHIPNAME.cpu
target create $_TARGETNAME km1m4xx -dap $_CHIPNAME.dap


$_TARGETNAME configure -work-area-phys 0x20000000 -work-area-size 0x2000 -work-area-backup 0

# flash bank <name> km1m4xx <base> <size(autodetect,set to 0)> 0 0 <target#>
#set _FLASHNAME $_CHIPNAME.flash
#flash bank $_FLASHNAME numicro 0 $_FLASHSIZE 0 0 $_TARGETNAME
# flash size will be probed


set _FLASHNAME $_CHIPNAME.flash_i
flash bank $_FLASHNAME km1m4xx 0x00000000 0 0 0 $_TARGETNAME 0

set _FLASHNAME $_CHIPNAME.flash_d
flash bank $_FLASHNAME km1m4xx 0x10800000 0 0 0 $_TARGETNAME 0

# set default SWCLK frequency
adapter speed 1000

# set default srst setting
reset_config srst_only srst_nogate srst_push_pull connect_assert_srst

gdb_breakpoint_override hard
